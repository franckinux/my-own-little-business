upstream app_server {
	# fail_timeout=0 means we always retry an upstream even if it failed
	# to return a good HTTP response

	server unix:/home/molb/molb.sock fail_timeout=0;
}

server {
	# use 'listen 80 deferred;' for Linux
	# listen 80 deferred;
	listen 443 ssl;

	client_max_body_size 4G;

	# set the correct host(s) for your site
	server_name commandes.molb.com;

	keepalive_timeout 70;

	# ssl configuration
	ssl_session_cache shared:SSL:10m;
	ssl_session_timeout 10m;
	ssl_certificate /etc/nginx/ssl/molb.com.crt;
	ssl_certificate_key /etc/nginx/ssl/molb.com.key;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;
	ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DHE+AES128:!ADH:!AECDH:!MD5;

	root /home/molb/venv/lib/python3.5/site-packages/molb;

	location = /favico.ico {
		root /home/molb/venv/lib/python3.5/site-packages/molb/static/favico.ico;
	}

	location / {
		# checks for static file, if not found proxy to app
		try_files $uri @proxy_to_app;

		# limit the types of http requests the server accepts
		limit_except GET POST {
			deny all;
		}
	}

	location @proxy_to_app {
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto https;
		proxy_set_header Host $http_host;
		proxy_redirect off;
		proxy_pass http://app_server;
	}

	include /etc/nginx/badbot.conf;
}
