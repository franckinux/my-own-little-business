upstream app_server {
	# fail_timeout=0 means we always retry an upstream even if it failed
	# to return a good HTTP response

	server unix:/home/molb/molb.sock fail_timeout=0;
}

server {
	client_max_body_size 4G;
	keepalive_timeout 5;

	server_name molb.com;

	location /static {
		root /home/molb/venv/lib/python3.5/site-packages/molb;
	}

	location /templates {
		root /home/molb/venv/lib/python3.5/site-packages/molb;
	}

	location = /favico.ico {
		root /home/molb/venv/lib/python3.5/site-packages/molb/static/favico.ico;
	}

	location ~ ^/(login|password/.+|profile/edit|register)/ {
		rewrite ^ https://$host$request_uri? permanent;
	}

	location / {
		try_files $uri @proxy_to_app;
	}

	location @proxy_to_app {
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_redirect off;
		proxy_pass http://app_server;
	}

	include /etc/nginx/badbot.conf;
}

server {
	listen 443 ssl;
	client_max_body_size 4G;
	keepalive_timeout 70;

	# ssl configuration
	ssl_session_cache shared:SSL:10m;
	ssl_session_timeout 10m;
	ssl_certificate /etc/nginx/ssl/molb.com.crt;
	ssl_certificate_key /etc/nginx/ssl/molb.com.key;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;
	ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DHE+AES128:!ADH:!AECDH:!MD5;
	#ssl_ciphers HIGH:!aNULL:!MD5;

	server_name orders.molb.com;

	location /static {
		root /home/molb/venv/lib/python3.5/site-packages/molb;
	}

	location /templates {
		root /home/molb/venv/lib/python3.5/site-packages/molb;
	}

	location = /favico.ico {
		root /home/molb/venv/lib/python3.5/site-packages/molb/static/favico.ico;
	}

	location ~ ^/(login|password/.+|profile/edit|register)/ {
		proxy_set_header X-Forwarded-Proto https;
		try_files $uri @proxy_to_app;
	}

	location / {
		rewrite ^ http://$host$request_uri? permanent;
	}

	location @proxy_to_app {
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto https;
		proxy_set_header Host $http_host;
		proxy_redirect off;
		proxy_pass http://app_server;
	}

	include /etc/nginx/badbot.conf;
}
